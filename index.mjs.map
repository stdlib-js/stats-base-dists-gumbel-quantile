{"version":3,"file":"index.mjs","sources":["../lib/quantile.js","../lib/factory.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport ln from '@stdlib/math-base-special-ln' ;\n\n\n// MAIN //\n\n/**\n* Evaluates the quantile function for a Gumbel distribution with location parameter `mu` and scale parameter `beta` at a probability `p`.\n*\n* @param {Probability} p - input value\n* @param {number} mu - location parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {number} evaluated quantile function\n*\n* @example\n* var y = quantile( 0.8, 0.0, 1.0 );\n* // returns ~1.5\n*\n* @example\n* var y = quantile( 0.5, 4.0, 2.0 );\n* // returns ~4.733\n*\n* @example\n* var y = quantile( 0.5, 4.0, 4.0 );\n* // returns ~5.466\n*\n* @example\n* var y = quantile( 1.1, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( -0.2, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( NaN, 0.0, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, NaN, 1.0 );\n* // returns NaN\n*\n* @example\n* var y = quantile( 0.0, 0.0, NaN );\n* // returns NaN\n*\n* @example\n* // Negative scale parameter:\n* var y = quantile( 0.5, 0.0, -1.0 );\n* // returns NaN\n*/\nfunction quantile( p, mu, beta ) {\n\tif (\n\t\tisnan( mu ) ||\n\t\tisnan( beta ) ||\n\t\tisnan( p ) ||\n\t\tbeta <= 0.0 ||\n\t\tp < 0.0 ||\n\t\tp > 1.0\n\t) {\n\t\treturn NaN;\n\t}\n\treturn mu - ( beta * ln( -ln( p ) ) );\n}\n\n\n// EXPORTS //\n\nexport default quantile;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport constantFunction from '@stdlib/utils-constant-function' ;\nimport isnan from '@stdlib/math-base-assert-is-nan' ;\nimport ln from '@stdlib/math-base-special-ln' ;\n\n\n// MAIN //\n\n/**\n* Returns a function for evaluating the quantile function for a Gumbel distribution with location parameter `mu` and scale parameter `beta`.\n*\n* @param {number} mu - location parameter\n* @param {PositiveNumber} beta - scale parameter\n* @returns {Function} quantile function\n*\n* @example\n* var quantile = factory( 0.0, 1.0 );\n* var y = quantile( 0.2 );\n* // returns ~-0.476\n*/\nfunction factory( mu, beta ) {\n\tif ( isnan( mu ) || isnan( beta ) || beta <= 0.0 ) {\n\t\treturn constantFunction( NaN );\n\t}\n\treturn quantile;\n\n\t/**\n\t* Evaluates the quantile function for a Gumbel distribution.\n\t*\n\t* @private\n\t* @param {Probability} p - input value\n\t* @returns {number} evaluated quantile function\n\t*\n\t* @example\n\t* var y = quantile( 0.3 );\n\t* // returns <number>\n\t*/\n\tfunction quantile( p ) {\n\t\tif ( isnan( p ) || p < 0.0 || p > 1.0 ) {\n\t\t\treturn NaN;\n\t\t}\n\t\treturn mu - (beta * ln( -ln( p ) ));\n\t}\n}\n\n\n// EXPORTS //\n\nexport default factory;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Gumbel distribution quantile function.\n*\n* @module @stdlib/stats-base-dists-gumbel-quantile\n*\n* @example\n* import quantile from '@stdlib/stats-base-dists-gumbel-quantile' ;\n*\n* var y = quantile( 0.8, 0.0, 1.0 );\n* // returns ~1.4999\n*\n* var myQuantile = quantile.factory( 8.0, 2.0 );\n* y = myQuantile( 0.5 );\n* // returns ~8.733\n*\n* y = myQuantile( 0.7 );\n* // returns ~10.062\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property' ;\nimport quantile from './quantile.js' ;\nimport factory from './factory.js' ;\n\n\n// MAIN //\n\nsetReadOnly( quantile, 'factory', factory );\n\n\n// EXPORTS //\n\nexport default quantile;\n"],"names":["quantile","p","mu","beta","isnan","NaN","ln","factory","constantFunction","setReadOnly"],"mappings":";;+XAyEA,SAASA,EAAUC,EAAGC,EAAIC,GACzB,OACCC,EAAOF,IACPE,EAAOD,IACPC,EAAOH,IACPE,GAAQ,GACRF,EAAI,GACJA,EAAI,EAEGI,IAEDH,EAAOC,EAAOG,GAAKA,EAAIL,IC3C/B,SAASM,EAASL,EAAIC,GACrB,OAAKC,EAAOF,IAAQE,EAAOD,IAAUA,GAAQ,EACrCK,EAAkBH,KAe1B,SAAmBJ,GAClB,GAAKG,EAAOH,IAAOA,EAAI,GAAOA,EAAI,EACjC,OAAOI,IAER,OAAOH,EAAMC,EAAOG,GAAKA,EAAIL,KCd/BQ,EAAAT,EAAA,UAAAO"}